{
  "hash": "b388ba1a79494acf1c8a0fdc2156146a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Ex02\"\nauthor: \"Zou Jiaxun\"\ndate: \"Sep 2, 2024\"\ndata-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Click to view code\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, raster, spatstat, tmap, tidyverse)\n```\n:::\n\n\n\n## Issue 1: Hands-on_2 standard answer 1\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"maptools\", repos = \"https://packagemanager.posit.co/cran/2023-10-13\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nThe downloaded binary packages are in\n\t/var/folders/k6/m28nhmy16gq06mch2hprzgfw0000gn/T//RtmpMQf3OD/downloaded_packages\n```\n\n\n:::\n:::\n\n\n\n## Issue 2: Creating coastal outline\n\nin sf. package, there are two functions allow us to combine multiple simple features.\n\n## Woking with st_union()\n\nThe code chunk below, st_union() is used to derive the coastal outline sf tibble data.frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_sf <- st_read(dsn = \"data\", layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Applications/SMU/S3/ISSS-626/ISSS-626 ZOUJIAXUN/In-class_Ex/In-class_Ex02/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_sf <- mpsz_sf %>%\n  st_union\nplot(sg_sf)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex02_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Introduce to the spastat package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## sf use as.ppp\n## polygon as.p. ???\n## owin ?\n```\n:::\n\n\n\n## Kernel Density Estimation\n\n\n:::{panel}\n\n## 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_sf <- st_read(\"data/child-care-services-geojson.geojson\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `child-care-services-geojson' from data source \n  `/Applications/SMU/S3/ISSS-626/ISSS-626 ZOUJIAXUN/In-class_Ex/In-class_Ex02/data/child-care-services-geojson.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 1545 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6824 ymin: 1.248403 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare_ppp <- as.ppp(childcare_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_owin <- as.owin(sg_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcareSG_ppp = childcare_ppp[sg_owin]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_childcareSG_bw <- density(childcareSG_ppp,\n                              sigma=bw.diggle,\n                              edge=TRUE,\n                            kernel=\"gaussian\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## maptool method\n## par(bg = '#E4D5C9')\n\n## gridded_kde_childcareSG_ad <- maptools::as.SpatialGridDataFrame.im(kde_childcareSG_adaptive)\n## spplot(gridded_kde_childcareSG_ad)\n```\n:::\n\n\n\n## 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcareSG_ppp.km <- rescale.ppp(childcareSG_ppp, 1000, \"km\")\n\nkde_childcareSG_adaptive <- adaptive.density(childcareSG_ppp.km, method=\"kernel\")\n\ngridded_kde_childcareSG_ad <- as(\n  kde_childcareSG_adaptive,\n  \"SpatialGridDataFrame\"\n)\nspplot(gridded_kde_childcareSG_ad)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n:::\n\n##",
    "supporting": [
      "In-class_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}