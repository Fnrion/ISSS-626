{
  "hash": "eaaef7347ac41f95db623a12ad077f04",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class_Ex09\"\nauthor: \"Zou Jiaxun\"\ndate: \"Oct 28, 2024\"\ndata-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n  cache: true\nformat:\n  html:\n    code-fold: true\n    code-summary: \"Click to view code\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neldercare <- st_read(dsn = \"data/HDB/rawdata\",\n                     layer = \"ELDERCARE\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `ELDERCARE' from data source \n  `/Applications/SMU/S3/ISSS626 - Geo/ISSS-626 ZOUJIAXUN/In-class_Ex/In-class_Ex09/data/HDB/rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 133 features and 18 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 14481.92 ymin: 28218.43 xmax: 41665.14 ymax: 46804.9\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nCHAS <- st_read(\"data/HDB/rawdata/CHASClinics.kml\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MOH_CHAS_CLINICS' from data source \n  `/Applications/SMU/S3/ISSS626 - Geo/ISSS-626 ZOUJIAXUN/In-class_Ex/In-class_Ex09/data/HDB/rawdata/CHASClinics.kml' \n  using driver `KML'\nSimple feature collection with 1193 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.5818 ymin: 1.016264 xmax: 103.9903 ymax: 1.456037\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_1km <- st_buffer(eldercare,\n                        dist = 1000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# tmap_mode(\"view\")\n# tmap_shape(buffer_1km) +\n#   tm_polygons() +\n# tm_shape(CHAS) +\n#   tm_dots()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# buffer_1km$pts_count <- lengths(\n#   st_intersects(buffer_1km, CHAS)\n# )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mpsz <- st_read(dsn = \"data/geospatial\", layer = \"MP14_SUBZONE_NO_SEA_PL\") %>%\n#   st_transform(3414)\n# hexagons <- st_read(dsn = \"data/geospatial\", layer = \"hexagons\") %>%\n#   st_transform(3414)  \n# eldercare <- st_read(dsn = \"data/geospatial\", layer = \"ELDERCARE\") %>%\n#   st_transform(3414)\n# ODMatrix <- read_csv(\"data/aspatial/OD_Matrix.csv\", skip = 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# eldercare <- eldercare %>%\n#   select(fid, ADDRESSPOS) %>%\n#   mutate(capacity = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# hexagons <- hexagons %>%\n#   select(fid) %>%\n#   mutate(demand = 100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# distmat <- ODMatrix %>%\n#   select(origin_id, destination_id, total_cost) %>%\n#   spread(destination_id, total_cost) %>%\n#   select(c(-c('origin_id)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# distmat_km <- as.matrix(distmat/1000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# acc_Hansen <- data.frame(ac(hexagons$demand,\n#                             eldercare$capacity,\n#                             distmat_km,\n#                             #d0 = 50,\n#                             power = 2,\n#                             family = \"Hansen\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# mapex <- st_bbox(hexagons)\n# \n# tmap_mode(\"plot\")\n# tm_shape(hexagon_Hansen,\n#          bbox = mapex) + \n#   tm_fill(col = \"accHansen\",\n#           n = 10,\n#           style = \"quantile\",\n#           border.col = \"black\",\n#           border.lwd = 1) +\n# tm_shape(eldercare) +\n#   tm_symbols(size = 0.1) +\n#   tm_layout(main.title = \"Accessibility to eldercare: Hansen method\",\n#             main.title.position = \"center\",\n#             main.title.size = 2,\n#             legend.outside = FALSE,\n#             legend.height = 0.45, \n#             legend.width = 3.0,\n#             legend.format = list(digits = 6),\n#             legend.position = c(\"right\", \"top\"),\n#             frame = TRUE) +\n#   tm_compass(type=\"8star\", size = 2) +\n#   tm_scale_bar(width = 0.15) +\n#   tm_grid(lwd = 0.1, alpha = 0.5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# hexagon_Hansen <- st_join(hexagon_Hansen, mpsz, \n#                           join = st_intersects)\n# \n# ggplot(data=hexagon_Hansen, \n#        aes(y = log(accHansen), \n#            x= REGION_N)) +\n#   geom_boxplot() +\n#   geom_point(stat=\"summary\", \n#              fun.y=\"mean\", \n#              colour =\"red\", \n#              size=2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# ggbetweenstats(data = hexagon_Hansen,\n#                x = REGION_N,\n#                y = acc_Hansen,\n#                type = \"P\")\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}